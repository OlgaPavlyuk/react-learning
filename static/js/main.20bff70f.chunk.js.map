{"version":3,"sources":["services/serviceData.js","Components/MainContent.js","Components/Error.js","Components/Loader.js","Components/Cards/Cards.js","Components/Cards/Card.js","Components/Cards/Learn.js","Components/Header.js","Icons/CloseTag.js","Components/Tag.js","Components/Elements.js","App.js","serviceWorker.js","index.js"],"names":["ServiceData","getResource","url","fetch","_apiBase","then","response","ok","Error","statusText","json","catch","err","console","log","Promise","reject","message","getAllCards","a","res","getLearningCards","this","MainContent","className","to","ErrorMessage","props","Loader","Cards","state","cards","error","errorMsg","loading","onCardsLoaded","setState","onError","renderRow","card","key","id","front","back","last_repeat","renderTable","map","React","Component","Card","useState","rotate","setRotate","classes","data","onClick","e","Learn","currentCard","Header","activeClassName","exact","CloseTag","width","height","xmlns","fill","viewBox","d","Tag","title","removing","Elements","type","placeholder","name","value","App","path","component","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20bff70f.chunk.js","sourcesContent":["export default class ServiceData {\r\n  constructor() {\r\n    this._apiBase = 'http://localhost:3000';\r\n  }\r\n\r\n  getResource = (url) => {\r\n    return fetch(`${this._apiBase}${url}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return Promise.reject(new Error(`Could not fetch ${url}: ${err.message}`));\r\n      })\r\n  }\r\n\r\n  getAllCards = async () => {\r\n    const res = await this.getResource('/cards/');\r\n    console.log(res);\r\n    return res;\r\n  }\r\n\r\n  getLearningCards = async () => {\r\n    const res = await this.getResource('/cards/');\r\n    // filter\r\n    return res;\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Link  } from 'react-router-dom';\r\n\r\nfunction MainContent() {\r\n  return (\r\n    <div className=\"container\">\r\n      <nav className=\"\">\r\n        <ul className=\"\">\r\n          <li className=\"\">\r\n            <Link to='/' className=\"\">Home</Link>\r\n          </li>\r\n          <li className=\"\">\r\n            <Link to='/cards/' className=\"\">All cards</Link>\r\n          </li>\r\n          <li className=\"\">\r\n            <Link to='/learn/' className=\"\">Learn</Link>\r\n          </li>\r\n          <li className=\"\">\r\n            <Link to='/elements/' className=\"\">Elements</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\r\nimport MainContent from './MainContent';\r\n\r\nfunction ErrorMessage (props) {\r\n  const { message } = props;\r\n  \r\n  function onCloseError() {\r\n    console.log('close error');\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      { message }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <span className=\"loader__text\">Loading</span><span className=\"loader__dot\"></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport ServiceData from '../../services/serviceData';\r\nimport ErrorMessage from '../Error';\r\nimport Loader from '../Loader';\r\n\r\n \r\nclass Cards extends React.Component {\r\n  ServiceData = new ServiceData();\r\n\r\n  state = {\r\n    cards: [],\r\n    error: null,\r\n    errorMsg: '',\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.ServiceData.getAllCards()\r\n    .then(this.onCardsLoaded)\r\n    .catch(this.onError)\r\n  }\r\n\r\n  onCardsLoaded = (cards) => {\r\n    console.log(cards);\r\n    this.setState({\r\n      cards,\r\n      error: false,\r\n      errorMsg: '',\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      errorMsg: error.message,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  renderRow = (card) => {\r\n    return (\r\n      <tr key={card.id}>\r\n        <td>{card.front}</td>\r\n        <td>{card.back}</td>\r\n        <td>{card.last_repeat}</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderTable = () => {\r\n    const { cards } = this.state;\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Front</th>\r\n            <th>Back</th>\r\n            <th>Last repeat</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cards.map(this.renderRow)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { error, errorMsg, loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorMessage message={errorMsg} />\r\n    }\r\n\r\n    return (\r\n      this.renderTable()\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { useState } from 'react';\r\n\r\nfunction Card(props) {\r\n  const [ rotate, setRotate ] = useState('front');\r\n  const classes = `card ${rotate}`;\r\n\r\n  const rotateCard = (e) => {\r\n    return setRotate(rotate === 'front' ? 'back' : 'front');\r\n  }\r\n\r\n  const { front, back } = props.data;\r\n\r\n  return (\r\n    <div className={ classes } onClick={ rotateCard }>\r\n      <div className=\"front text\">{front}</div>\r\n      <div className=\"back text\">{back}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ServiceData from '../../services/serviceData';\r\nimport ErrorMessage from '../Error';\r\nimport Loader from '../Loader';\r\nimport Card from '../Cards/Card';\r\n\r\nclass Learn extends React.Component {\r\n  ServiceData = new ServiceData();\r\n\r\n  state = {\r\n    cards: [],\r\n    error: null,\r\n    errorMsg: '',\r\n    loading: true,\r\n    currentCard: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.ServiceData.getLearningCards()\r\n    .then(this.onCardsLoaded)\r\n    .catch(this.onError)\r\n  }\r\n\r\n  onCardsLoaded = (cards) => {\r\n    this.setState({\r\n      cards,\r\n      error: false,\r\n      errorMsg: '',\r\n      loading: false,\r\n      currentCard: 2,\r\n    });\r\n  }\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      errorMsg: error.message,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorMsg, loading, cards, currentCard } = this.state;\r\n    if (loading) {\r\n      return <Loader />\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorMessage message={errorMsg}/>\r\n    }\r\n\r\n    return (\r\n      <Card data={cards[currentCard]}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Learn;\r\n","import React from 'react';\r\nimport { NavLink  } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <nav className=\"nav\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"nav__item\">\r\n              <NavLink  to='/' activeClassName=\"active\" className=\"nav__link\" exact>Home</NavLink >\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <NavLink  to='/cards/' activeClassName=\"active\" className=\"nav__link\" exact>All cards</NavLink >\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <NavLink  to='/learn/' activeClassName=\"active\" className=\"nav__link\" exact>Learn</NavLink >\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CloseTag = (props) => {\r\n  const { width, height } = props;\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 12 12\" width={width} height={height}>\r\n      <path fill=\"#000000\" d=\"M6 0C2.7 0 0 2.7 0 6s2.7 6 6 6 6-2.7 6-6-2.7-6-6-6zm2.625 7.575l-1.05 1.05L6 7.05 4.425 8.625l-1.05-1.05L4.95 6 3.375 4.425l1.05-1.05L6 4.95l1.575-1.575 1.05 1.05L7.05 6l1.575 1.575z\"/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CloseTag;\r\n","import React from 'react';\r\nimport CloseTag from '../Icons/CloseTag';\r\n\r\n/* function in props insteed of 'removing' for render close btn? */\r\n/* how to do not fixed width and height for icon? */\r\n\r\nconst Tag = ({title, removing}) => {\r\n  return (\r\n    <div className=\"tag\">\r\n      <span className=\"tag__text\">{title}</span>\r\n      { removing && <button className=\"tag__btn\"><CloseTag width=\"12\" height=\"12\"/></button> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tag;","import React from 'react';\r\nimport Tag from '../Components/Tag';\r\n\r\nfunction Elements() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"h2\">Elements</h2>\r\n      <div className=\"divider\"></div>\r\n      <div className=\"elements\">\r\n        <div className=\"elements__wrapper\">\r\n            <h1 className=\"h1\">Heading 1 - h1</h1>\r\n            <h2 className=\"h2\">Heading 2 - h2</h2>\r\n            <h3 className=\"h3\">Heading 3 - h3</h3>\r\n            <h4 className=\"h4\">Heading 4 - h4</h4>\r\n            <div className=\"divider\"></div>\r\n            <p>text</p>\r\n            <p className=\"small-text\">small-text</p>\r\n          </div>\r\n        <div className=\"elements__wrapper\">\r\n          <h4 className=\"h4\">.btn.btn-primary</h4>\r\n            <button className=\"btn btn-primary\">Button</button>\r\n            <button className=\"btn btn-primary btn-small\">Button Small</button>            \r\n          <h4 className=\"h4\">.btn.btn-inverse</h4>\r\n            <button className=\"btn btn-inverse\">Button</button>            \r\n            <button className=\"btn btn-inverse btn-small\">Button Small</button>\r\n          <h4 className=\"h4\">Tags</h4>\r\n            <Tag title=\"Tag name\"/>\r\n            <Tag title=\"Tag name\" removing=\"true\"/>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n          <h4 className=\"h4\">Inputs</h4>\r\n\r\n          <div className=\"input__wrapper\">\r\n            <input type=\"text\" placeholder=\"input text\" className=\"input-text\"/>\r\n          </div>\r\n          \r\n          <div className=\"input__wrapper\">\r\n            <label className=\"checkbox\">\r\n              <input type=\"checkbox\" className=\"checkbox__input\" />\r\n              <span className=\"checkbox__mark\"></span>\r\n              Checkbox\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"input__wrapper\">\r\n            <label className=\"checkbox\">\r\n              <input type=\"radio\" className=\"checkbox__input\" name=\"radio\" value={0} />\r\n              <span className=\"radio__mark\"></span>\r\n              Radio value\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"input__wrapper\">\r\n            <label className=\"checkbox\">\r\n              <input type=\"radio\" className=\"checkbox__input\" name=\"radio\" value={1} />\r\n              <span className=\"radio__mark\"></span>\r\n              Radio value\r\n            </label>\r\n          </div>\r\n          \r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Elements;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Learn from './Components/Cards/Learn';\r\nimport Header from './Components/Header';\r\nimport MainContent from './Components/MainContent';\r\nimport Elements from './Components/Elements';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app purple\">\r\n        <Header />\r\n        <main>\r\n          <section className=\"content\">\r\n            <div className=\"container\">\r\n              <Route path='/' component={MainContent} exact/>\r\n              <Route path='/cards/' component={Cards} exact/>\r\n              <Route path='/learn/' component={Learn} exact/>\r\n              <Route path='/elements/' component={Elements} exact/>\r\n            </div>\r\n          </section>\r\n        </main>\r\n        <footer className=\"footer\">\r\n          <div className=\"container\">\r\n            Footer\r\n            <br />\r\n            <a href=\"https://www.figma.com/file/tRtdlPcgS602OuW5rPSooB/Eggplore-Style-Guide---Freebie-(Copy)?node-id=0%3A1\">figma</a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}